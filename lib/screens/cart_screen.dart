import 'package:flutter/material.dart';import 'package:iconly/iconly.dart';import 'package:provider/provider.dart';import 'package:shop_smart/services/my_app_methods.dart';import 'package:shop_smart/widgets/title_text_.dart';import '../provider/cart_provider.dart';import '../services/assest_manger.dart';import '../widgets/cart_bottom_checkout.dart';import '../widgets/cart_widget.dart';import '../widgets/empty_bag.dart';class CartScreen extends StatelessWidget {  const CartScreen({super.key});  @override  Widget build(BuildContext context) {    final cartProvider = Provider.of<CartProvider>(context);    return cartProvider.getCartItems.isEmpty        ? Scaffold(            body: EmptyBag(              imagePath: AssetsManager.shoppingBasket,              title: "Your cart is empty",              subTitle:                  'Looks like you didn\'t add anything yet to your cart \ngo ahead and start shopping now',              buttonText: "Shop Now",            ),          )        : Scaffold(            bottomSheet: const CartButtomCheckOut(),            appBar: AppBar(              title: TitlesTextWidget(                label: "Cart (${cartProvider.getCartItems.length})",                fontSize: 20,              ),              leading: Padding(                padding: const EdgeInsets.all(8.0),                child: Image.asset(AssetsManager.shoppingCart),              ),              actions: [                IconButton(                  onPressed: () {                    MyAppMethods.showErrorOrWarningDialog(                        subTitle: "ClearCart",                        context: context,                        isError: false,                        fct: () {                          cartProvider.clearLocalCart();                        });                  },                  icon: const Icon(                    IconlyLight.delete,                    color: Colors.red,                  ),                ),              ],            ),            body: Column(              children: [                Expanded(                    child: ListView.builder(                  itemCount: cartProvider.getCartItems.length,                  itemBuilder: (context, index) {                    return ChangeNotifierProvider.value(                      value: cartProvider.getCartItems.values                          .toList()                          .reversed                          .toList()[index],                      child: const CartWidget(),                    );                  },                )),                const SizedBox(                  height: kBottomNavigationBarHeight + 10,                )              ],            ),          );  }}